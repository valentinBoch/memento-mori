/* frontend/src/App.css */
:root {
  --bg-color: #111111;
  --text-color: #EAEAEA;
  --primary-color: #FBBF24;
  --secondary-color: #444444;
  --future-dot-color: #2a2a2a;
  --font-family: 'Inter', sans-serif;
}

* { box-sizing: border-box; margin: 0; padding: 0; }

/* Apply background to both <html> and <body> for full viewport coverage */
html, body {
  background-color: var(--bg-color);
  color: var(--text-color);
  font-family: var(--font-family);
}

body {
  overflow-x: hidden;
}

.App {
  display: flex;
  flex-direction: column;
  align-items: center;
  /* On desktop, the app takes the full screen height */
  height: 100vh;
  max-height: 100vh;
  text-align: center;
  
  /* Add padding to account for the notch and system bars on iOS */
  padding-top: calc(1rem + env(safe-area-inset-top, 0px));
  padding-right: calc(1rem + env(safe-area-inset-right, 0px));
  padding-bottom: calc(1rem + env(safe-area-inset-bottom, 0px));
  padding-left: calc(1rem + env(safe-area-inset-left, 0px));
}

header, footer {
  width: 100%;
  max-width: 1200px;
  flex-shrink: 0;
}

header h1 { font-size: 3.5rem; font-weight: 900; letter-spacing: -2px; }
.subtitle { font-size: 1.1rem; color: #999; margin-top: 0.5rem; max-width: 500px; margin: 0 auto; }

main {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  padding: 1rem 0;
  min-height: 0;
}

/* --- Form Styles --- */
.input-form { background: #1a1a1a; padding: 2.5rem; border-radius: 16px; border: 1px solid #2a2a2a; display: flex; flex-direction: column; gap: 1.5rem; width: 100%; max-width: 450px; animation: fadeInUp 1s ease-out; }
.form-group { display: flex; flex-direction: column; text-align: left; }
.form-group label { margin-bottom: 0.5rem; font-weight: 700; color: #ccc; }
.form-group input, .form-group select { padding: 0.75rem 1rem; background: var(--bg-color); border: 1px solid var(--secondary-color); border-radius: 8px; color: var(--text-color); font-family: var(--font-family); font-size: 1rem; transition: border-color 0.3s, box-shadow 0.3s; }
.form-group input:focus, .form-group select:focus { outline: 0; border-color: var(--primary-color); box-shadow: 0 0 0 3px rgba(251, 191, 36, .3); }
input[type=date]::-webkit-calendar-picker-indicator { filter: invert(1); cursor: pointer; }

/* 
 * ===============================================
 * ===   Custom Select Dropdown Styles (NEW)   ===
 * ===============================================
*/
/* 1. The wrapper becomes a positioning context */
.select-wrapper {
  position: relative;
}

/* 2. Hide the default arrow from the browser */
.select-wrapper select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  /* Add padding to prevent text from overlapping our new arrow */
  padding-right: 2.5rem;
}

/* 3. Create our custom arrow using a pseudo-element */
.select-wrapper::after {
  content: 'â–¼'; /* You can also use SVG as a background-image */
  font-size: 0.8rem;
  color: var(--primary-color);
  
  position: absolute;
  right: 1rem; /* Position on the right */
  top: 55%; /* Roughly center vertically (adjust if needed) */

  /* This is crucial: it allows clicks to "pass through" the arrow to the select element */
  pointer-events: none; 
}


button { padding: .8rem 1.5rem; border: none; border-radius: 8px; background: var(--primary-color); color: #111; font-weight: 700; font-size: 1rem; cursor: pointer; transition: transform .2s, background-color .2s; margin-top: 1rem; }
button:hover { transform: translateY(-3px); background-color: #fca510; }
.error-message { color: #ef4444; font-size: .9rem; }

/* --- Life Grid Styles --- */
.life-grid-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  animation: fadeIn 1.5s ease-in-out;
  flex-grow: 1;
  min-height: 0;
}

.stats {
  margin-bottom: 1rem;
  font-size: 1rem;
  color: #aaa;
  line-height: 1.6;
}
.stats p { margin: 0.2rem 0; }
.stats span { font-size: 1.2rem; font-weight: 700; color: var(--primary-color); }

.life-grid-svg {
  width: 100%;
  height: auto;
  max-width: 1200px;
  margin: 0 auto;
  max-height: 100%; 
}

/* --- SVG Dot Styles --- */
circle.dot { transition: fill 0.2s ease-out, filter 0.2s ease-out, transform 0.2s ease-out; cursor: default; transform-origin: center; }
circle.dot.past { fill: var(--primary-color); }
circle.dot.past:hover { filter: brightness(1.2); }
circle.dot.future { fill: var(--future-dot-color); }
circle.dot.future:hover { fill: var(--secondary-color); }
circle.dot.current { fill: #FFFFFF; stroke: var(--primary-color); stroke-width: 1px; }
circle.dot.current:hover { filter: none; }


.reset-button { margin-top: 1rem; background-color: var(--secondary-color); color: var(--text-color); }
.reset-button:hover { background-color: #555; }
footer { padding-top: 1rem; color: #666; font-size: .9rem; }
@keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
@keyframes fadeInDown { from { opacity: 0; transform: translateY(-20px); } to { opacity: 1; transform: translateY(0); } }
@keyframes fadeInUp { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }

/* ===================================== */
/* ===   MOBILE RESPONSIVE STYLES      === */
/* ===================================== */

@media (max-width: 768px) {
  
  .App {
    min-height: 100vh;
    height: auto;
    max-height: none;
  }

  main {
    flex-grow: 0;
  }

  .life-grid-container {
    flex-grow: 0;
    overflow-x: auto;
    padding-bottom: 0.5rem;
  }

  .life-grid-svg {
    max-height: none; 
  }

  header h1 {
    font-size: 2.5rem;
  }
  .subtitle {
    font-size: 1rem;
  }
  .input-form {
    padding: 1.5rem;
  }
  
  circle.dot:hover {
    filter: none;
  }
  circle.dot.future:hover {
    fill: var(--future-dot-color);
  }
}